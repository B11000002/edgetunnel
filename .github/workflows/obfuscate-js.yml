name: Obfuscate js

permissions:
  contents: write

on:
  push:
    paths:
      - '_worker.js'  # 仅在 _worker.js 变动时触发
  workflow_dispatch:   # 允许手动触发

jobs:
  obfuscate_and_update_worker:
    name: Obfuscate js
    runs-on: ubuntu-latest
    # 确保仅在 _worker.js 实际变更时运行
    if: ${{ github.event_name == 'workflow_dispatch' || contains(github.event.commits[0].modified, '_worker.js') }}

    env:
      SOURCE_FILE: _worker.js
      OUTPUT_FILE: _worker-jiami.js

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 2  # 获取足够历史用于变更检查

      - name: Check if _worker.js changed
        id: check-change
        run: |
          # 手动触发时总是运行
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "✅ 手动触发，执行混淆"
            echo "should_run=true" >> $GITHUB_OUTPUT
            exit 0
          fi
          
          # 检查 _worker.js 是否在变更文件列表中
          if [[ " ${{ toJSON(github.event.commits[0].modified) }} " = *'_worker.js'* ]]; then
            echo "✅ _worker.js 已变更，执行混淆"
            echo "should_run=true" >> $GITHUB_OUTPUT
          else
            echo "ℹ️ _worker.js 未变更，跳过混淆"
            echo "should_run=false" >> $GITHUB_OUTPUT
          fi

      - name: Setup Node.js
        if: ${{ steps.check-change.outputs.should_run == 'true' }}
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install obfuscation tool
        if: ${{ steps.check-change.outputs.should_run == 'true' }}
        run: npm install -g javascript-obfuscator

      - name: Verify source file exists
        if: ${{ steps.check-change.outputs.should_run == 'true' }}
        run: |
          if [ ! -f "$SOURCE_FILE" ]; then
            echo "❌ 错误: 源文件 $SOURCE_FILE 不存在"
            exit 1
          fi

      - name: Obfuscate ${{ env.SOURCE_FILE }}
        if: ${{ steps.check-change.outputs.should_run == 'true' }}
        run: |
          OUTPUT_FILE=$(echo "$OUTPUT_FILE" | xargs) # 去除空格
          javascript-obfuscator "$SOURCE_FILE" --output "$OUTPUT_FILE" \
          --compact true \
          --control-flow-flattening false \
          --dead-code-injection true \
          --dead-code-injection-threshold 0.5 \
          --identifier-names-generator mangled \
          --string-array true \
          --string-array-encoding 'rc4' \
          --string-array-threshold 0.75 \
          --transform-object-keys true \
          --unicode-escape-sequence false

          if [ ! -f "$OUTPUT_FILE" ]; then
            echo "❌ 错误: 混淆文件 $OUTPUT_FILE 未生成"
            exit 1
          else
            echo "✅ 已生成混淆文件 $OUTPUT_FILE"
          fi

      - name: Commit and push changes
        if: ${{ steps.check-change.outputs.should_run == 'true' }}
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add "$OUTPUT_FILE"
          
          if git diff --cached --quiet; then
            echo "ℹ️ 没有可提交的更改"
          else
            git commit -m "更新混淆后的 $OUTPUT_FILE 文件"
            git push
          fi
